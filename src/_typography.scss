// Font Families
$font-header: Arial;
$font-main: Arial;

// Font Sizes | Responsive
$breakpoints: (
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

$html-font-sizes: (
  null: 12px,
  sm: 13px,
  md: 14px,
  lg: 15px,
  xl: 16px
);

$display-font-sizes: (
  null: 2.5rem,
  sm: 3rem,
  md: 3.25rem,
  lg: 4rem,
  xl: 4.5rem
);

$h1-font-sizes: (
  null: 1.75rem,
  sm: 2.25rem,
  md: 2.5rem,
  lg: 2.75rem
);

$h2-font-sizes: (
  null: 1.5rem,
  sm: 2rem,
  md: 2.25rem,
  lg: 2.5rem
);

$h3-font-sizes: (
  null: 1.3rem,
  sm: 1.75rem,
  md: 2rem,
  lg: 2.25rem
);

$p-font-sizes: (
  null: (1rem, 1.3),
  sm: 1.1rem,
  md: (1.2rem, 1.4),
  900px: 1.25rem,
  lg: (1.3rem, 1.45),
  xl: (1.35rem, 1.5)
);

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    } @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == 'list' {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  } @else {
    font-size: $fs-font-size;
  }
}

// Set the text color automatically based on the background color
// To use,   color: set-text-color(pass-in-bg-color);
@function set-text-color($bg-color) {
  @if (lightness($bg-color) > 50) {
    @return $text-color-light-bg; // Lighter backgorund, return dark color
  } @else {
    @return $text-color-dark-bg; // Darker background, return light color
  }
}
